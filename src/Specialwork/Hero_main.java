package Specialwork;

public class Hero_main {

	//(어느 부분을 상속해야 할지 감이 안잡히네,
	// 상속이면 싸우라는건가?
	// 그렇다면 누가 부모클래스로 와야하는지 정의가 명확하지 않다.  
	
	// 상대의 데미지를 전달하는 부모 클래스가 필요할 것 같다. 
	// 
	
	//공통적으로 가지는 Memder value;
	// 체력)
	// 
//	문제: 한 마을에 마법사(Sorcerer), 기사(Knight), 도적(Rogue)이라는 세 종류의 영웅이 살고 있습니다. 
//	각 영웅은 마법(magic), 검(sword), 그리고 은신(sneak)이라는 특수한 능력을 가지고 있습니다.
//  특수 능력 별로 상속을 해야하나?
	
//	마법사는 마법을 사용할 수 있으며, 주문의 힘을 나타내는 마력(mana)을 가지고 있습니다.
//	기사는 검을 사용할 수 있으며, 검의 강인함을 나타내는 체력(health)을 가지고 있습니다.
//	도적은 은신을 사용할 수 있으며, 은신의 숙련도를 나타내는 민첩성(agility)을 가지고 있습니다.
//
//	이러한 영웅들을 상속을 통해 구현하고, 다음의 상황을 해결하는 코드를 작성해보세요:
//	(여기서 상속이 사용될 만한 상황이 있나? 메소드들 끼리의 연결성이 없는 것 같은데,, 클래스 끼리도 마찬가지 )
	
	
	
//	마법사는 마법을 사용하여 마력을 소비할 수 있습니다. 마법을 사용하면 마력이 감소하고, "마법을 사용했습니다!"라는 메시지가 출력됩니다.
//	마법사는 마법을 사용할 수 있는데, 특정한 마법을 배우면 추가로 특수한 마법 기술을 사용할 수 있습니다. 
//	마법사는 "파이어볼"과 "힐링"이라는 두 가지 마법을 배울 수 있습니다. 
//	"파이어볼"을 사용하면 적을 공격하여 대미지를 입히고, "힐링"을 사용하면 자신의 체력을 회복할 수 있습니다.
// 	힐링 사용시 회복할 체력이 필요
	
	
//	기사는 검을 휘둘러 공격할 수 있습니다. 공격을 하면 체력이 감소하고, (knigth의 체력이 감소하는 건가?) "검으로 공격했습니다!"라는 메시지가 출력됩니다.
//	기사는 검을 사용하는데, 검을 휘둘러 공격하는 것 외에도 "방패 막기"라는 특수한 방어 기술을 사용할 수 있습니다. "방패 막기"를 사용하면 적의 공격을 블록하여 받는 대미지를 감소시킬 수 있습니다.
	//(데미지 감소는 해당 데미지의 값을 받아, 퍼센트로 체력에 영향을 주면 될 것 같음)
	
//
//	도적은 은신하여 숨을 수 있습니다. 은신을 하면 민첩성이 감소하고, "은신합니다..."라는 메시지가 출력됩니다.
//	도적은 은신 능력 외에도 "배낭 가방"이라는 특수한 기능을 갖고 있습니다. 
//	배낭 가방은 도적이 훔친 보물이나 아이템을 저장하는 용도로 사용됩니다. 
//	도적은 배낭에 아이템을 추가하거나 제거할 수 있습니다.
	
	// (배낭은 배열로 표현하는 것이 편해보인다. 
	// 배열에 계속 추가하는 것을 방지하기 위해서 배열 최댓값은 5정도로 주고, 
	// 인덱스를 늘려줄 cnt 변수 선언이 필요해보인다 
	// 추가시 마다. ++로,  => 이경우, 최댓값을 넘었을 경우 배열에 추가되지 않을 상황이 발생 할 수 있는데, 
	// 차라리 추가/ 삭제 시, 몇번 째에 저장하고, 아이템을 삭제할 지 사용자가 지정하도록 하는 것도 방법일 수 있겠다. )
//
//
//	아래는 메인 메서드
	    public static void main(String[] args) {
	        // 마법사 객체 생성
	    	//생성자에 int 형 선언이 필요 
	        Sorcerer sorcerer = new Sorcerer(50);
	        sorcerer.learnSpell("파이어볼");
	        sorcerer.castSpell("파이어볼");
	        System.out.println("마법사의 마력: " + sorcerer.getMana());

	        // 기사 객체 생성
	        Knight knight = new Knight(100);
	        knight.attack();
	        knight.block();
	        System.out.println("기사의 체력: " + knight.getHealth());
	        //sword 특수 능력을 통해 이용되는 스킬 같음. 

	        // 도적 객체 생성
	        Rogue rogue = new Rogue(20);
	        rogue.hide();
	        rogue.addItemToBackpack("금화");
	        rogue.removeItemFromBackpack("보석");
	    }
	    
	    //해당 문제에서 상속받을 만한 마땅한 요소가 없어서 개개의 클래스를 생성,
	    //만약 문제의 요구사항이 두 직업간의 전투를 요구한다면 아직 구현이 힘들 것으로 예상.
}
